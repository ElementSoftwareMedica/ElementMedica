# Nginx production config for Element Formazione
# - HTTPS for domains elementformazione.com and www.elementformazione.com
# - ACME webroot for Certbot under /var/www/certbot
# - Default HTTP server for IP access (no redirect)

# Domain HTTP -> HTTPS redirect (except ACME)
server {
    listen 80;
    server_name elementformazione.com www.elementformazione.com;

    # ACME challenge for Let's Encrypt
    location ^~ /.well-known/acme-challenge/ {
        root /var/www/certbot;
        default_type "text/plain";
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

# Default HTTP server (IP access, no redirect)
server {
    listen 80 default_server;
    server_name _;

    root /usr/share/nginx/html;
    index index.html;

    # Compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml image/svg+xml;

    # Health check
    location = /health {
        access_log off;
        add_header Content-Type text/plain;
        return 200 "ok\n";
    }

    # Static assets
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files $uri =404;
    }

    # API placeholder (until backend is deployed)
    location /api/ {
        add_header Content-Type text/plain;
        return 502 "API service not configured on HTTP. Please use domain (HTTPS) when backend is available.\n";
    }

    # SPA fallback
    location / {
        try_files $uri $uri/ /index.html;
    }
}

# HTTPS server for domains
server {
    listen 443 ssl http2;
    server_name elementformazione.com www.elementformazione.com;

    # SSL certs provisioned by Certbot
    ssl_certificate     /etc/letsencrypt/live/elementformazione.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/elementformazione.com/privkey.pem;

    # Basic TLS settings
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;

    # Security headers (adjust as needed)
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # App root (built SPA)
    root /usr/share/nginx/html;
    index index.html;

    # Health check
    location = /health {
        access_log off;
        add_header Content-Type text/plain;
        return 200 "ok\n";
    }

    # Static assets
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files $uri =404;
    }

    # API placeholder (update proxy_pass when backend container is available)
    location /api/ {
        add_header Content-Type text/plain;
        return 502 "API service not yet deployed.\n";
        # Example for future:
        # proxy_http_version 1.1;
        # proxy_set_header Upgrade $http_upgrade;
        # proxy_set_header Connection "upgrade";
        # proxy_set_header Host $host;
        # proxy_set_header X-Real-IP $remote_addr;
        # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # proxy_set_header X-Forwarded-Proto $scheme;
        # proxy_read_timeout 300s;
        # proxy_connect_timeout 60s;
        # proxy_pass http://api:4001/;
    }

    # SPA fallback
    location / {
        try_files $uri $uri/ /index.html;
    }
}