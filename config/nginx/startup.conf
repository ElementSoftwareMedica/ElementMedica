# ElementMedica 2.0 - Nginx Startup Configuration
# Ottimizzato per server con 2GB RAM
# Performance e sicurezza per startup

# Configurazione globale ottimizzata
worker_processes auto;
worker_rlimit_nofile 65535;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    # MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging ottimizzato
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main buffer=16k flush=5s;
    error_log /var/log/nginx/error.log warn;

    # Performance ottimizzazioni
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 100;
    types_hash_max_size 2048;
    server_tokens off;

    # Buffer sizes ottimizzati per startup
    client_body_buffer_size 16K;
    client_header_buffer_size 1k;
    client_max_body_size 10M;
    large_client_header_buffers 4 16k;

    # Timeouts
    client_body_timeout 12;
    client_header_timeout 12;
    send_timeout 10;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
    limit_req_zone $binary_remote_addr zone=general:10m rate=30r/m;

    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;

    # Cache zones
    proxy_cache_path /var/cache/nginx/api levels=1:2 keys_zone=api_cache:10m max_size=100m inactive=60m use_temp_path=off;
    proxy_cache_path /var/cache/nginx/static levels=1:2 keys_zone=static_cache:10m max_size=200m inactive=1d use_temp_path=off;

    # Upstream per API
    upstream api_backend {
        server proxy-server:4003 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # Redirect HTTP to HTTPS
    server {
        listen 80;
        server_name _;
        
        # Health check per load balancer
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Let's Encrypt challenge
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }
        
        # Redirect tutto il resto a HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # Server HTTPS principale
    server {
        listen 443 ssl http2;
        server_name elementmedica.com www.elementmedica.com;

        # SSL Configuration
        ssl_certificate /etc/letsencrypt/live/elementmedica.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/elementmedica.com/privkey.pem;
        ssl_trusted_certificate /etc/letsencrypt/live/elementmedica.com/chain.pem;

        # SSL Security ottimizzato
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        ssl_session_tickets off;
        ssl_stapling on;
        ssl_stapling_verify on;

        # Security Headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' https://api.elementmedica.com;" always;

        # Rate limiting globale
        limit_req zone=general burst=50 nodelay;
        limit_conn conn_limit_per_ip 20;

        # Root per file statici
        root /usr/share/nginx/html;
        index index.html;

        # API Proxy con rate limiting specifico
        location /api/ {
            # Rate limiting API
            limit_req zone=api burst=20 nodelay;
            
            # Rate limiting speciale per login
            location /api/auth/login {
                limit_req zone=login burst=3 nodelay;
                proxy_pass http://api_backend;
                include /etc/nginx/proxy_params;
            }
            
            # Proxy generale API
            proxy_pass http://api_backend;
            
            # Headers proxy
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # Timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 30s;
            
            # Buffer
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
            
            # Cache per GET requests non-auth
            proxy_cache api_cache;
            proxy_cache_valid 200 302 5m;
            proxy_cache_valid 404 1m;
            proxy_cache_bypass $http_authorization;
            proxy_no_cache $http_authorization;
            
            # Headers cache
            add_header X-Cache-Status $upstream_cache_status;
        }

        # File statici con cache aggressivo
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
            
            # Cache Nginx
            proxy_cache static_cache;
            proxy_cache_valid 200 1d;
            
            # Compressione
            gzip_static on;
            
            # Security headers per static files
            add_header X-Content-Type-Options "nosniff" always;
        }

        # Manifest e service worker
        location ~* \.(manifest|webmanifest|sw\.js)$ {
            expires 1h;
            add_header Cache-Control "public, no-cache";
        }

        # Frontend SPA - React Router
        location / {
            try_files $uri $uri/ /index.html;
            
            # Cache per HTML
            expires 1h;
            add_header Cache-Control "public, no-cache";
            
            # Security headers
            add_header X-Frame-Options "SAMEORIGIN" always;
            add_header X-Content-Type-Options "nosniff" always;
        }

        # Health check interno
        location /nginx-health {
            access_log off;
            return 200 "nginx healthy\n";
            add_header Content-Type text/plain;
        }

        # Blocco file sensibili
        location ~* \.(env|log|conf|key|pem|crt)$ {
            deny all;
            return 404;
        }

        # Blocco directory nascoste
        location ~ /\. {
            deny all;
            return 404;
        }

        # Robots.txt
        location = /robots.txt {
            allow all;
            log_not_found off;
            access_log off;
        }

        # Favicon
        location = /favicon.ico {
            log_not_found off;
            access_log off;
            expires 1y;
        }

        # Error pages personalizzate
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /404.html {
            root /usr/share/nginx/html;
            internal;
        }
        
        location = /50x.html {
            root /usr/share/nginx/html;
            internal;
        }
    }

    # Server per redirect www
    server {
        listen 443 ssl http2;
        server_name www.elementmedica.com;
        
        ssl_certificate /etc/letsencrypt/live/elementmedica.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/elementmedica.com/privkey.pem;
        
        return 301 https://elementmedica.com$request_uri;
    }

    # Server di fallback per domini non configurati
    server {
        listen 80 default_server;
        listen 443 ssl default_server;
        server_name _;
        
        ssl_certificate /etc/nginx/ssl/default.crt;
        ssl_certificate_key /etc/nginx/ssl/default.key;
        
        return 444;
    }
}

# Configurazione stream per monitoring (opzionale)
stream {
    # Upstream per database monitoring
    upstream postgres_backend {
        server db.supabase.co:5432;
    }
    
    # Proxy per connessioni database (se necessario)
    server {
        listen 5432;
        proxy_pass postgres_backend;
        proxy_timeout 1s;
        proxy_responses 1;
    }
}