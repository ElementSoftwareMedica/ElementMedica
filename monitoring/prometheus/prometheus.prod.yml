# Prometheus Configuration for ElementMedica Production
# Optimized for monitoring Node.js backend, PostgreSQL, Redis, and Nginx

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'elementmedica-prod'
    environment: 'production'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

# Load rules once and periodically evaluate them
rule_files:
  - "rules/*.yml"

# Scrape configurations
scrape_configs:
  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 30s
    metrics_path: /metrics

  # ElementMedica Backend Services
  - job_name: 'elementmedica-backend'
    static_configs:
      - targets: ['backend:4001', 'backend:4002', 'backend:4003']
    scrape_interval: 15s
    metrics_path: /metrics
    scrape_timeout: 10s
    honor_labels: true
    params:
      format: ['prometheus']
    relabel_configs:
      - source_labels: [__address__]
        regex: 'backend:4001'
        target_label: service
        replacement: 'api-server'
      - source_labels: [__address__]
        regex: 'backend:4002'
        target_label: service
        replacement: 'documents-server'
      - source_labels: [__address__]
        regex: 'backend:4003'
        target_label: service
        replacement: 'proxy-server'
      - source_labels: [__address__]
        target_label: instance
        replacement: '${1}'

  # PostgreSQL Database Monitoring
  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres-exporter:9187']
    scrape_interval: 30s
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__address__]
        target_label: service
        replacement: 'postgresql'

  # Redis Cache Monitoring
  - job_name: 'redis'
    static_configs:
      - targets: ['redis-exporter:9121']
    scrape_interval: 30s
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__address__]
        target_label: service
        replacement: 'redis'

  # Nginx Load Balancer Monitoring
  - job_name: 'nginx'
    static_configs:
      - targets: ['nginx-exporter:9113']
    scrape_interval: 30s
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__address__]
        target_label: service
        replacement: 'nginx'

  # Node Exporter for System Metrics
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 30s
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__address__]
        target_label: service
        replacement: 'system'

  # cAdvisor for Container Metrics
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
    scrape_interval: 30s
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__address__]
        target_label: service
        replacement: 'containers'

  # Health Check Monitoring
  - job_name: 'health-checks'
    static_configs:
      - targets: 
        - 'backend:4001'
        - 'backend:4002' 
        - 'backend:4003'
        - 'frontend:80'
        - 'nginx:80'
    scrape_interval: 10s
    metrics_path: /health
    scrape_timeout: 5s
    relabel_configs:
      - source_labels: [__address__]
        target_label: service
        replacement: 'health-check'

# Remote write configuration (optional - for long-term storage)
# remote_write:
#   - url: "https://your-remote-prometheus-endpoint/api/v1/write"
#     basic_auth:
#       username: "your-username"
#       password: "your-password"
#     queue_config:
#       max_samples_per_send: 1000
#       max_shards: 200
#       capacity: 2500

# Storage configuration
storage:
  tsdb:
    retention.time: 30d
    retention.size: 10GB
    wal-compression: true

# Query configuration
query:
  max_concurrency: 20
  timeout: 2m
  max_samples: 50000000