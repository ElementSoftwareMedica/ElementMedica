version: "3.9"

services:
  nginx:
    image: nginx:1.25-alpine
    container_name: em-nginx
    restart: always
    ports:
      - "${NGINX_HTTP_PORT:-80}:80"
      - "${NGINX_HTTPS_PORT:-443}:443"
    volumes:
      - ./dist:/usr/share/nginx/html:ro
      - ${NGINX_CONF:-./nginx/production.conf}:/etc/nginx/conf.d/default.conf:ro
      - ./letsencrypt-webroot:/var/www/certbot
      - ./ssl:/etc/letsencrypt
      - ./logs/nginx:/var/log/nginx
    environment:
      - TZ=Europe/Rome
    depends_on:
      - proxy

  # One-shot certificate request container (run manually when DNS points to server)
  certbot:
    image: certbot/certbot:latest
    container_name: em-certbot
    volumes:
      - ./letsencrypt-webroot:/var/www/certbot
      - ./ssl:/etc/letsencrypt
    entrypoint: ["/bin/sh", "-c"]
    command: >
      "trap exit TERM; while :; do sleep 3600; done"

  # Cron-like renew container (optional: can be disabled until cert issued)
  certbot-renew:
    image: certbot/certbot:latest
    container_name: em-certbot-renew
    restart: unless-stopped
    entrypoint: ["/bin/sh", "-c"]
    command: >
      "while :; do certbot renew --webroot -w /var/www/certbot --non-interactive --quiet || true; sleep 12h; done"
    volumes:
      - ./letsencrypt-webroot:/var/www/certbot
      - ./ssl:/etc/letsencrypt
      - ${NGINX_CONF:-./nginx/production.conf}:/etc/nginx/conf.d/default.conf:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - nginx

  # Backend API service (port 4001)
  api:
    build:
      context: ./backend
      dockerfile: Dockerfile.api
      target: production
    env_file:
      - ./backend/.env.production
    environment:
      - TZ=Europe/Rome
      - API_HOST=0.0.0.0
    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend/logs:/app/logs
    restart: unless-stopped
    expose:
      - "4001"

  # Documents service (port 4002)
  documents:
    build:
      context: ./backend
      dockerfile: Dockerfile.docs
      target: production
    env_file:
      - ./backend/.env.production
    environment:
      - TZ=Europe/Rome
      - DOCUMENTS_HOST=0.0.0.0
    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend/logs:/app/logs
    restart: unless-stopped
    expose:
      - "4002"

  # Proxy service (aggregates API/Docs under /api, port 4003)
  proxy:
    build:
      context: ./backend
      dockerfile: Dockerfile.proxy
      target: production
    env_file:
      - ./backend/.env.production
    environment:
      - TZ=Europe/Rome
      - PROXY_HOST=0.0.0.0
      - API_SERVER_URL=http://api:4001
      - DOCUMENTS_SERVER_URL=http://documents:4002
    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend/logs:/app/logs
    restart: unless-stopped
    depends_on:
      - api
      - documents
    expose:
      - "4003"

networks:
  default:
    name: em-net
    driver: bridge